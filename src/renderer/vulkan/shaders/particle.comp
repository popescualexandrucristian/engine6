#version 460
#extension GL_ARB_separate_shader_objects : enable

struct particle
{
	vec2 position;
	vec2 velocity;
    vec4 color;
};

layout (binding = 0) uniform parameters_UBO
{
    float delta_time;
};

layout(std140, binding = 1) readonly buffer particle_SSBO_in
{
   particle particles_in[];
};

layout(std140, binding = 2) buffer particle_SSBO_out
{
   particle particles_out[];
};

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main() 
{
    uint index = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * gl_NumWorkGroups.x * 16;

    particle particle_in = particles_in[index];

    particles_out[index].position = particle_in.position + particle_in.velocity.xy * delta_time;
    particles_out[index].velocity = particle_in.velocity;

    if ((particles_out[index].position.x <= -1.0) || (particles_out[index].position.x >= 1.0)) {
        particles_out[index].velocity.x = -particles_out[index].velocity.x;
        particles_out[index].position.x += particles_out[index].velocity.x * delta_time;
    }
    if ((particles_out[index].position.y <= -1.0) || (particles_out[index].position.y >= 1.0)) {
        particles_out[index].velocity.y = -particles_out[index].velocity.y;
        particles_out[index].position.y += particles_out[index].velocity.y * delta_time;
    }
}